// <auto-generated />
using System;
using Enxaquecapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Enxaquecapp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200501000925_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Enxaquecapp.Domain.Cause", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Description")
                        .IsUnique();

                    b.ToTable("Causes");
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Episode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CauseId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime?>("End");

                    b.Property<int>("Intensity");

                    b.Property<Guid?>("LocalId");

                    b.Property<bool>("ReleafWorked");

                    b.Property<Guid?>("ReliefId");

                    b.Property<DateTime>("Start");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CauseId");

                    b.HasIndex("LocalId");

                    b.HasIndex("ReliefId");

                    b.HasIndex("UserId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Local", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Description")
                        .IsUnique();

                    b.ToTable("Locals");
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Medication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ConsumedDoses");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<TimeSpan>("Interval");

                    b.Property<string>("Name");

                    b.Property<DateTime>("Start");

                    b.Property<int>("TotalDoses");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Relief", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Description")
                        .IsUnique();

                    b.ToTable("Reliefs");
                });

            modelBuilder.Entity("Enxaquecapp.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("Sex");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Cause", b =>
                {
                    b.HasOne("Enxaquecapp.Domain.User", "User")
                        .WithMany("Causes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Episode", b =>
                {
                    b.HasOne("Enxaquecapp.Domain.Cause", "Cause")
                        .WithMany("Episodes")
                        .HasForeignKey("CauseId");

                    b.HasOne("Enxaquecapp.Domain.Local", "Local")
                        .WithMany("Episodes")
                        .HasForeignKey("LocalId");

                    b.HasOne("Enxaquecapp.Domain.Relief", "Relief")
                        .WithMany("Episodes")
                        .HasForeignKey("ReliefId");

                    b.HasOne("Enxaquecapp.Domain.User", "User")
                        .WithMany("Episodes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Local", b =>
                {
                    b.HasOne("Enxaquecapp.Domain.User", "User")
                        .WithMany("Locals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Medication", b =>
                {
                    b.HasOne("Enxaquecapp.Domain.User", "User")
                        .WithMany("Medications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Enxaquecapp.Domain.Relief", b =>
                {
                    b.HasOne("Enxaquecapp.Domain.User", "User")
                        .WithMany("Reliefs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
